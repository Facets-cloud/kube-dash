{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/": {
            "get": {
                "description": "Get general information about the KubeDash API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "API Information",
                "responses": {
                    "200": {
                        "description": "API information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/app/config": {
            "get": {
                "description": "Retrieve all stored kubeconfig configurations with cluster information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Get all kubeconfigs",
                "responses": {
                    "200": {
                        "description": "List of kubeconfig configurations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/app/config/bearer": {
            "post": {
                "description": "Create and store a kubeconfig using bearer token authentication",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create kubeconfig with bearer token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Configuration name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes API server URL",
                        "name": "serverIP",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (defaults to name if not provided)",
                        "name": "cluster",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bearer kubeconfig created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required fields",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/app/config/certificate": {
            "post": {
                "description": "Create and store a kubeconfig using client certificate authentication",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create kubeconfig with client certificates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Configuration name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes API server URL",
                        "name": "serverIP",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client certificate data (PEM format)",
                        "name": "clientCertData",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client private key data (PEM format)",
                        "name": "clientKeyData",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (defaults to name if not provided)",
                        "name": "cluster",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Certificate Authority data (PEM format)",
                        "name": "ca",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Certificate kubeconfig created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required fields",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/app/config/kubeconfigs": {
            "post": {
                "description": "Upload and store a kubeconfig file for cluster access. Supports both file upload and text content.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Upload kubeconfig file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Kubeconfig file to upload",
                        "name": "kubeconfig",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Kubeconfig content as text",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Filename for the kubeconfig",
                        "name": "filename",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kubeconfig uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid file or format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/app/config/kubeconfigs/{id}": {
            "delete": {
                "description": "Remove a stored kubeconfig configuration by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Delete kubeconfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubeconfig ID to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kubeconfig deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Kubeconfig not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/app/config/validate": {
            "post": {
                "description": "Validate a kubeconfig file format and test connectivity to all clusters. Supports both file upload and text content.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Validate kubeconfig file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Kubeconfig file to validate",
                        "name": "kubeconfig",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Kubeconfig content as text",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Filename for the kubeconfig",
                        "name": "filename",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validation results with cluster connectivity status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid file or format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/app/config/validate-all": {
            "get": {
                "description": "Validate connectivity for all stored kubeconfig configurations and return their current status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Validate all stored kubeconfigs",
                "responses": {
                    "200": {
                        "description": "Validation results for all kubeconfigs with connectivity status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/app/config/validate-bearer": {
            "post": {
                "description": "Validate bearer token credentials and test connectivity to the Kubernetes cluster",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Validate bearer token configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Configuration name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes API server URL",
                        "name": "serverIP",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (defaults to name if not provided)",
                        "name": "cluster",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validation results with connectivity status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required fields",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/app/config/validate-certificate": {
            "post": {
                "description": "Validate client certificate credentials and test connectivity to the Kubernetes cluster",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Validate certificate configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Configuration name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes API server URL",
                        "name": "serverIP",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client certificate data (PEM format)",
                        "name": "clientCertData",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client private key data (PEM format)",
                        "name": "clientKeyData",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (defaults to name if not provided)",
                        "name": "cluster",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Certificate Authority data (PEM format)",
                        "name": "ca",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validation results with connectivity status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required fields",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/cloudshell": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "List all active cloud shell sessions for a specific configuration and cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud Shell"
                ],
                "summary": "List Cloud Shell Sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace (default: default)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cloud shell sessions with limits",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Create a new cloud shell session with kubectl and helm access",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud Shell"
                ],
                "summary": "Create Cloud Shell Session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace (default: default)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Cloud shell session created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - session limit reached",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cloudshell/cleanup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Manually trigger cleanup of old cloud shell sessions and orphaned resources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud Shell"
                ],
                "summary": "Manual Cloud Shell Cleanup",
                "responses": {
                    "200": {
                        "description": "Cleanup initiated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cloudshell/ws": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Connect to an interactive cloud shell terminal via WebSocket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Connect to Cloud Shell via WebSocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cloud shell pod name",
                        "name": "pod",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Pod not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cloudshell/{name}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Delete a specific cloud shell session by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud Shell"
                ],
                "summary": "Delete Cloud Shell Session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cloud shell session name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace (default: default)",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configmaps": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all ConfigMaps in the specified namespace with transformed response format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigMaps"
                ],
                "summary": "Get all ConfigMaps in a namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transformed ConfigMaps",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ConfigMapListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configmaps/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves ConfigMaps in the specified namespace with Server-Sent Events for real-time updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "ConfigMaps"
                ],
                "summary": "Get ConfigMaps with real-time updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of transformed ConfigMaps or JSON array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ConfigMapListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configmaps/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific ConfigMap by name and namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "ConfigMaps"
                ],
                "summary": "Get a specific ConfigMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ConfigMap name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConfigMap details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ConfigMap not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configmaps/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific ConfigMap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "ConfigMaps"
                ],
                "summary": "Get ConfigMap events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ConfigMap name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configmaps/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific ConfigMap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "ConfigMaps"
                ],
                "summary": "Get ConfigMap YAML",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ConfigMap name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConfigMap YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ConfigMap not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configmaps/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific ConfigMap by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "ConfigMaps"
                ],
                "summary": "Get a specific ConfigMap by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ConfigMap name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConfigMap details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ConfigMap not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configmaps/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific ConfigMap by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "ConfigMaps"
                ],
                "summary": "Get ConfigMap events by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ConfigMap name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configmaps/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific ConfigMap by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "ConfigMaps"
                ],
                "summary": "Get ConfigMap YAML by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ConfigMap name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConfigMap YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ConfigMap not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjob/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves detailed information about a specific CronJob by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get CronJob by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CronJob name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CronJob details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CronJob not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjob/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific CronJob by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get CronJob events by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CronJob name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CronJob events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CronJob not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjob/{name}/jobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all jobs created by a specific CronJob by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get CronJob jobs by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CronJob name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CronJob jobs",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CronJob not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjob/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific CronJob by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get CronJob YAML by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CronJob name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CronJob YAML representation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CronJob not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Streams CronJobs data in real-time using Server-Sent Events. Supports namespace filtering and multi-cluster configurations.",
                "consumes": [
                    "text/event-stream"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get CronJobs (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace to filter resources",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streaming CronJobs data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.CronJobListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjobs/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves detailed information about a specific CronJob in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get CronJob by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CronJob name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CronJob details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CronJob not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjobs/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific CronJob in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get CronJob events by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CronJob name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CronJob events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CronJob not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjobs/{namespace}/{name}/suspend": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Toggles the suspend state of a CronJob to pause or resume its execution",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Suspend or resume CronJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CronJob name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Suspend request body",
                        "name": "suspend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suspend operation success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CronJob not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjobs/{namespace}/{name}/trigger": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Manually triggers a CronJob by creating a new job from its template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Trigger CronJob manually",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CronJob name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trigger success response with created job details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CronJob not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cronjobs/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific CronJob in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get CronJob YAML by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CronJob name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CronJob YAML representation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CronJob not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresourcedefinitions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get all Custom Resource Definitions (CRDs) in the cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resource Definitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Custom Resource Definitions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresourcedefinitions/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get all Custom Resource Definitions with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resource Definitions (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of Custom Resource Definitions data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresourcedefinitions/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get a specific Custom Resource Definition by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resource Definition by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CRD name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom Resource Definition details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "CRD not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresources": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get all custom resources for a specific Custom Resource Definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource version",
                        "name": "version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace (if empty, returns cluster-wide resources)",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of custom resources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresources/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get custom resources for a specific CRD with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resources (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource version",
                        "name": "version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace (if empty, returns cluster-wide resources)",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of custom resources data with additional printer columns",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresources/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get a specific custom resource by name and namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resource by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource version",
                        "name": "version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom resource details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Custom resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresources/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get events for a specific custom resource in a namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resource Events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource version",
                        "name": "version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of events for the custom resource",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Custom resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresources/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get the YAML representation of a specific custom resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resource YAML",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource version",
                        "name": "version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom resource YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Custom resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresources/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get events for a specific custom resource (cluster-scoped or with optional namespace)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resource Events by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource version",
                        "name": "version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace (optional for namespaced resources)",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of events for the custom resource",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Custom resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customresources/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get the YAML representation of a specific custom resource (cluster-scoped or with optional namespace)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Custom Resources"
                ],
                "summary": "Get Custom Resource YAML by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource version",
                        "name": "version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace (optional for namespaced resources)",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom resource YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing required parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Custom resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonset/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve a specific daemonset by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get DaemonSet by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DaemonSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DaemonSet details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "DaemonSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonset/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve events for a specific daemonset by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get DaemonSet Events by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DaemonSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DaemonSet events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonset/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all pods belonging to a specific daemonset by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get DaemonSet Pods by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DaemonSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DaemonSet pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "DaemonSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonset/{name}/restart": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Restart all pods in a daemonset using rolling restart strategy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Restart DaemonSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DaemonSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DaemonSet restart initiated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonset/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve the YAML representation of a specific daemonset by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get DaemonSet YAML by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DaemonSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DaemonSet YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "DaemonSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonsets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all daemonsets with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get DaemonSets (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace to filter daemonsets (empty for all namespaces)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of daemonset data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.DaemonSetListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonsets/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve a specific daemonset by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get DaemonSet by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "DaemonSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DaemonSet details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "DaemonSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonsets/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve events for a specific daemonset by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get DaemonSet Events by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "DaemonSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DaemonSet events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonsets/{namespace}/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all pods belonging to a specific daemonset by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get DaemonSet Pods by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "DaemonSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DaemonSet pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "DaemonSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/daemonsets/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve the YAML representation of a specific daemonset by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get DaemonSet YAML by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "DaemonSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DaemonSet YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "DaemonSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployment/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve a specific deployment by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployment by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployment/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve events for a specific deployment by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployment Events by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployment/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all pods belonging to a specific deployment by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployment Pods by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployment/{name}/restart": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Restart all pods in a deployment using rolling or recreate strategy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Restart Deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Restart request body (restartType: 'rolling' or 'recreate', defaults to 'rolling')",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "restartType": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment restart initiated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters or restart type",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployment/{name}/scale": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Update the number of replicas for a specific deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Scale Deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Scale request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "replicas": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment scaled successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployment/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve the YAML representation of a specific deployment by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployment YAML by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all deployments with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployments (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace to filter deployments (empty for all namespaces)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of deployment data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.DeploymentListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployments/json": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all deployments in JSON format (non-streaming)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployments (JSON)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace to filter deployments (empty for all namespaces)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of deployments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployments/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve a specific deployment by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployment by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployments/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve events for a specific deployment by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployment Events by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployments/{namespace}/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all pods belonging to a specific deployment by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployment Pods by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/deployments/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve the YAML representation of a specific deployment by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Deployment YAML by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Streams Events data in real-time using Server-Sent Events. Provides live updates of cluster events.",
                "consumes": [
                    "text/event-stream"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Events (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace to filter events (empty for cluster-wide)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streaming Events data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/feature-flags": {
            "get": {
                "description": "Get the current feature flag configuration including tracing and cloud shell enablement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get Feature Flags",
                "responses": {
                    "200": {
                        "description": "Feature flags configuration",
                        "schema": {
                            "$ref": "#/definitions/handlers.FeatureFlagsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/helm/charts/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Searches for Helm charts in Artifact Hub based on query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Helm"
                ],
                "summary": "Search Helm charts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Maximum number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Repository filter",
                        "name": "repository",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/helm/releases/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves Helm releases in the specified namespace with Server-Sent Events for real-time updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Helm"
                ],
                "summary": "Get Helm releases with real-time updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (empty for all namespaces)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of Helm releases or JSON array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.HelmReleaseResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/helm/releases/{name}/details": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves detailed information about a specific Helm release including status, values, and metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Helm"
                ],
                "summary": "Get Helm release details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Release name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Helm release details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Release not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/hpas": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all HorizontalPodAutoscalers in the specified namespace with transformed response format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HPAs"
                ],
                "summary": "Get all HPAs in a namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transformed HPAs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.HPAListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/hpas/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves HorizontalPodAutoscalers in the specified namespace with Server-Sent Events for real-time updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "HPAs"
                ],
                "summary": "Get HPAs with real-time updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of transformed HPAs or JSON array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.HPAListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/hpas/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific HorizontalPodAutoscaler by name and namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "HPAs"
                ],
                "summary": "Get a specific HPA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HPA name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HPA details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "HPA not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/hpas/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific HorizontalPodAutoscaler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "HPAs"
                ],
                "summary": "Get HPA events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HPA name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/hpas/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific HorizontalPodAutoscaler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "HPAs"
                ],
                "summary": "Get HPA YAML",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HPA name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HPA YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "HPA not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/hpas/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific HorizontalPodAutoscaler by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "HPAs"
                ],
                "summary": "Get a specific HPA by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HPA name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HPA details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "HPA not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/hpas/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific HorizontalPodAutoscaler by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "HPAs"
                ],
                "summary": "Get HPA events by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HPA name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/hpas/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific HorizontalPodAutoscaler by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "HPAs"
                ],
                "summary": "Get HPA YAML by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HPA name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HPA YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "HPA not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/ingress/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve a specific ingress by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Networking"
                ],
                "summary": "Get Ingress by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ingress name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingress details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Ingress not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/ingress/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve events for a specific ingress by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Networking"
                ],
                "summary": "Get Ingress Events by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ingress name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingress events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/ingress/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve the YAML representation of a specific ingress by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Networking"
                ],
                "summary": "Get Ingress YAML by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ingress name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingress YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Ingress not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/ingresses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all ingresses with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Networking"
                ],
                "summary": "Get Ingresses (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace to filter ingresses (empty for all namespaces)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of ingress data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.IngressListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/ingresses/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve a specific ingress by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Networking"
                ],
                "summary": "Get Ingress by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingress details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Ingress not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/ingresses/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve events for a specific ingress by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Networking"
                ],
                "summary": "Get Ingress Events by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingress events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/ingresses/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve the YAML representation of a specific ingress by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Networking"
                ],
                "summary": "Get Ingress YAML by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingress YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Ingress not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/job/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves detailed information about a specific Job by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Job by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/job/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific Job by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Job events by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/job/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all pods managed by a specific Job by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Job pods by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/job/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific Job by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Job YAML by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job YAML representation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/jobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Streams Jobs data in real-time using Server-Sent Events. Supports namespace filtering and multi-cluster configurations.",
                "consumes": [
                    "text/event-stream"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Jobs (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace to filter resources",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streaming Jobs data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.JobListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/jobs/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves detailed information about a specific Job in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Job by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/jobs/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific Job in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Job events by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Job name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/jobs/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific Job in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Job YAML by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job YAML representation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/leases": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all leases in the specified namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Get all leases in a namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of leases",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/leases/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves leases in the specified namespace with Server-Sent Events for real-time updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Get leases with real-time updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of leases or JSON array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/leases/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific lease by name and namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Get a specific lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lease name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lease details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Lease not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/leases/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Get lease events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Lease name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/leases/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Get lease YAML",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lease name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lease YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Lease not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/metrics/pods/{namespace}/{name}/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Streams Prometheus-based pod metrics (CPU, memory, network) via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get pod metrics with real-time updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "15m",
                        "description": "Time range for metrics",
                        "name": "range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "15s",
                        "description": "Step interval for metrics",
                        "name": "step",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of pod metrics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Prometheus not available",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/metrics/prometheus/availability": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Checks if Prometheus is installed and reachable in the cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Check Prometheus availability",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prometheus availability status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/namespaces": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Streams Namespaces data in real-time using Server-Sent Events. Provides live updates of namespace status.",
                "consumes": [
                    "text/event-stream"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Namespaces (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streaming Namespaces data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/namespaces/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves detailed information about a specific namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Namespace by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Namespace details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Namespace not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/namespaces/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Namespace events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Namespace events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Namespace not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/namespaces/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all pods in a specific namespace with real-time updates",
                "consumes": [
                    "application/json",
                    "text/event-stream"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Namespace pods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Namespace pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Namespace not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/namespaces/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Namespace YAML",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Namespace YAML representation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Namespace not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nodes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Streams Nodes data in real-time using Server-Sent Events. Provides live updates of cluster node status.",
                "consumes": [
                    "text/event-stream"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Nodes (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streaming Nodes data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cluster.NodeListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nodes/permissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Checks if the current user has permission to perform specific actions on a node (cordon, uncordon, drain)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Check Node action permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "cordon",
                            "uncordon",
                            "drain"
                        ],
                        "type": "string",
                        "description": "Action to check permissions for",
                        "name": "action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Node name to check permissions for",
                        "name": "nodeName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission check results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nodes/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves detailed information about a specific node in the cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Node by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Node name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Node details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nodes/{name}/cordon": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Marks a node as unschedulable, preventing new pods from being scheduled on it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Cordon Node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Node name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cordon operation success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nodes/{name}/drain": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Evicts all pods from a node and marks it as unschedulable for maintenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Drain Node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Node name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Drain options",
                        "name": "drainOptions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cluster.NodeActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Drain operation success with eviction details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "206": {
                        "description": "Partial success - some pods failed to evict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nodes/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Node events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Node name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Node events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nodes/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all pods running on a specific node with real-time updates",
                "consumes": [
                    "application/json",
                    "text/event-stream"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Node pods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Node name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Node pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nodes/{name}/uncordon": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Marks a node as schedulable, allowing new pods to be scheduled on it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Uncordon Node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Node name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Uncordon operation success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nodes/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Node YAML",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Node name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Node YAML representation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/persistentvolumeclaims": {
            "get": {
                "security": [
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get all persistent volume claims with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Get Persistent Volume Claims (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace filter",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of PVC data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PersistentVolumeClaimListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/persistentvolumes": {
            "get": {
                "security": [
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get all persistent volumes with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Get Persistent Volumes (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of PV data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PersistentVolumeListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/pod/{name}/exec/ws": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Execute interactive commands in a pod container by name via WebSocket connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Execute Commands in Pod by Name via WebSocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pod name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Container name (defaults to first container)",
                        "name": "container",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Command to execute (default: /bin/sh)",
                        "name": "command",
                        "in": "query"
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Pod not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/pod/{name}/logs/ws": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Stream real-time pod logs via WebSocket connection with support for multiple containers, previous logs, and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Stream Pod Logs via WebSocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Container name (defaults to first container)",
                        "name": "container",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Stream logs from all containers",
                        "name": "all-containers",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include logs from previous pod instance",
                        "name": "previous",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Get all logs (ignores tail-lines)",
                        "name": "all-logs",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of lines to tail (default: 100)",
                        "name": "tail-lines",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time for logs (RFC3339 format)",
                        "name": "since-time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Pod not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/poddisruptionbudgets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all Pod Disruption Budgets in the specified namespace with transformed response format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PodDisruptionBudgets"
                ],
                "summary": "Get all Pod Disruption Budgets in a namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transformed Pod Disruption Budgets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodDisruptionBudgetListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/poddisruptionbudgets/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves Pod Disruption Budgets in the specified namespace with Server-Sent Events for real-time updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "PodDisruptionBudgets"
                ],
                "summary": "Get Pod Disruption Budgets with real-time updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of transformed Pod Disruption Budgets or JSON array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodDisruptionBudgetListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/poddisruptionbudgets/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific Pod Disruption Budget by name and namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "PodDisruptionBudgets"
                ],
                "summary": "Get a specific Pod Disruption Budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod Disruption Budget name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod Disruption Budget details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Pod Disruption Budget not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/pods": {
            "get": {
                "security": [
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get all pods with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get Pods (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace filter",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Node name filter",
                        "name": "node",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Owner type (deployment, daemonset, etc.)",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Owner name",
                        "name": "ownerName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of pod data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/pods/{namespace}/{name}/exec/ws": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Execute interactive commands in a pod container via WebSocket connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Execute Commands in Pod via WebSocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Container name (defaults to first container)",
                        "name": "container",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Command to execute (default: /bin/sh)",
                        "name": "command",
                        "in": "query"
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Pod not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/portforward/sessions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all currently active port forward sessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Port Forward"
                ],
                "summary": "Get Active Port Forward Sessions",
                "responses": {
                    "200": {
                        "description": "List of active sessions with count",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/portforward/sessions/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Stop a specific port forward session by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Port Forward"
                ],
                "summary": "Stop Port Forward Session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session stopped successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/portforward/ws": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Create a port forward connection to a Kubernetes resource via WebSocket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Port Forward via WebSocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource type (pod, service)",
                        "name": "resourceType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "resourceName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Remote port to forward to",
                        "name": "remotePort",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Local port to bind (auto-assigned if not specified)",
                        "name": "localPort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Protocol (default: TCP)",
                        "name": "protocol",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/replicaset/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves detailed information about a specific ReplicaSet by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get ReplicaSet by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ReplicaSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReplicaSet details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ReplicaSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/replicaset/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific ReplicaSet by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get ReplicaSet events by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ReplicaSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReplicaSet events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ReplicaSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/replicaset/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all pods managed by a specific ReplicaSet by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get ReplicaSet pods by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ReplicaSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReplicaSet pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ReplicaSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/replicaset/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific ReplicaSet by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get ReplicaSet YAML by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ReplicaSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReplicaSet YAML representation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ReplicaSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/replicasets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Streams ReplicaSets data in real-time using Server-Sent Events. Supports namespace filtering and multi-cluster configurations.",
                "consumes": [
                    "text/event-stream"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get ReplicaSets (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace to filter resources",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streaming ReplicaSets data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ReplicaSetListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/replicasets/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves detailed information about a specific ReplicaSet in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get ReplicaSet by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ReplicaSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReplicaSet details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ReplicaSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/replicasets/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific ReplicaSet in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get ReplicaSet events by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ReplicaSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReplicaSet events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ReplicaSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/replicasets/{namespace}/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all pods managed by a specific ReplicaSet in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get ReplicaSet pods by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ReplicaSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReplicaSet pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ReplicaSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/replicasets/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific ReplicaSet in a given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get ReplicaSet YAML by namespace and name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name for multi-cluster setups",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Kubernetes namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ReplicaSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReplicaSet YAML representation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "ReplicaSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/secrets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves all secrets in the specified namespace with transformed response format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Get all secrets in a namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transformed secrets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.SecretListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/secrets/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves secrets in the specified namespace with Server-Sent Events for real-time updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Get secrets with real-time updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of transformed secrets or JSON array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.SecretListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/secrets/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific secret by name and namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Get a specific secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Secret details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Secret not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/secrets/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Get secret events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/secrets/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Get secret YAML",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Secret YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Secret not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/secrets/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific secret by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Get a specific secret by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Secret details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Secret not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/secrets/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific secret by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Get secret events by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/secrets/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific secret by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Get secret YAML by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Secret YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Secret not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/serviceaccounts/sse": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves Service Accounts in the specified namespace with Server-Sent Events for real-time updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream",
                    "application/json"
                ],
                "tags": [
                    "ServiceAccounts"
                ],
                "summary": "Get Service Accounts with real-time updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (empty for all namespaces)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of transformed Service Accounts or JSON array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ServiceAccountListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/serviceaccounts/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific Service Account by name and namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "ServiceAccounts"
                ],
                "summary": "Get a specific Service Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Account name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Account details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Service Account not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/serviceaccounts/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific Service Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "ServiceAccounts"
                ],
                "summary": "Get Service Account YAML",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Account name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Account YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Service Account not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/serviceaccounts/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves a specific Service Account by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceAccounts"
                ],
                "summary": "Get a specific Service Account by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Account name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Account details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Service Account not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/serviceaccounts/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves events related to a specific Service Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "ServiceAccounts"
                ],
                "summary": "Get Service Account events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Service Account name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/serviceaccounts/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieves the YAML representation of a specific Service Account by name with namespace from query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "ServiceAccounts"
                ],
                "summary": "Get Service Account YAML by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Account name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Account YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Service Account not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/services": {
            "get": {
                "security": [
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Get all services with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Networking"
                ],
                "summary": "Get Services (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes configuration ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace filter",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of service data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ServiceListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulset/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve a specific statefulset by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get StatefulSet by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "StatefulSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulset/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve events for a specific statefulset by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get StatefulSet Events by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulset/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all pods belonging to a specific statefulset by name with namespace as query parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get StatefulSet Pods by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "StatefulSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulset/{name}/restart": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Restart all pods in a statefulset using rolling or recreate strategy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Restart StatefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Restart request body (restartType: 'rolling' or 'recreate', defaults to 'rolling')",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "restartType": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet restart initiated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters or restart type",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulset/{name}/scale": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Update the number of replicas for a specific statefulset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Scale StatefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Scale request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "replicas": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet scaled successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulset/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve the YAML representation of a specific statefulset by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get StatefulSet YAML by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing namespace parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "StatefulSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulsets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all statefulsets with real-time updates via Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get StatefulSets (SSE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace to filter statefulsets (empty for all namespaces)",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream of statefulset data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.StatefulSetListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulsets/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve a specific statefulset by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get StatefulSet by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet details",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "StatefulSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulsets/{namespace}/{name}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve events for a specific statefulset by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get StatefulSet Events by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulsets/{namespace}/{name}/pods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve all pods belonging to a specific statefulset by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get StatefulSet Pods by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet pods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.PodListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "StatefulSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/statefulsets/{namespace}/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "KubeConfig": []
                    }
                ],
                "description": "Retrieve the YAML representation of a specific statefulset by namespace and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workloads"
                ],
                "summary": "Get StatefulSet YAML by Namespace and Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kubernetes config ID",
                        "name": "config",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster name (for multi-cluster configs)",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "StatefulSet name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StatefulSet YAML",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "StatefulSet not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/traces": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get traces with filtering and pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracing"
                ],
                "summary": "Get Traces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by service name",
                        "name": "service",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by operation name",
                        "name": "operation",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by trace status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time filter (RFC3339 format)",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time filter (RFC3339 format)",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimum duration filter (e.g., '100ms', '1s')",
                        "name": "minDuration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum duration filter (e.g., '5s', '1m')",
                        "name": "maxDuration",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of traces to return (default: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of traces to skip (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Traces with pagination info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/traces/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export all traces as JSON file download",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracing"
                ],
                "summary": "Export Traces",
                "responses": {
                    "200": {
                        "description": "Traces export file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/traces/service-map": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get service dependency map showing connections between services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracing"
                ],
                "summary": "Get Service Map",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Time range for service map (default: '1h')",
                        "name": "timeRange",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service map with nodes and connections",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/traces/{traceId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a specific trace by its trace ID including all spans",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracing"
                ],
                "summary": "Get Trace by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trace ID",
                        "name": "traceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trace details with spans",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - missing trace ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Trace not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tracing/config": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current tracing configuration settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracing"
                ],
                "summary": "Get Tracing Configuration",
                "responses": {
                    "200": {
                        "description": "Tracing configuration",
                        "schema": {
                            "$ref": "#/definitions/config.TracingConfig"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the tracing configuration settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracing"
                ],
                "summary": "Update Tracing Configuration",
                "parameters": [
                    {
                        "description": "Tracing configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.TracingConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated tracing configuration",
                        "schema": {
                            "$ref": "#/definitions/config.TracingConfig"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid configuration",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tracing/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get statistics about stored traces including counts, averages, and error rates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracing"
                ],
                "summary": "Get Tracing Statistics",
                "responses": {
                    "200": {
                        "description": "Tracing statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get the health status of the API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Health status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cluster.NodeActionRequest": {
            "type": "object",
            "properties": {
                "deleteEmptyDirData": {
                    "type": "boolean"
                },
                "force": {
                    "type": "boolean"
                },
                "gracePeriod": {
                    "type": "integer"
                },
                "ignoreDaemonSets": {
                    "type": "boolean"
                }
            }
        },
        "cluster.NodeListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "resourceVersion": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "podCIDR": {
                            "type": "string"
                        },
                        "podCIDRs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "providerID": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "addresses": {
                            "type": "object",
                            "properties": {
                                "internalIP": {
                                    "type": "string"
                                }
                            }
                        },
                        "conditionStatus": {
                            "type": "string"
                        },
                        "nodeInfo": {
                            "type": "object",
                            "properties": {
                                "architecture": {
                                    "type": "string"
                                },
                                "bootID": {
                                    "type": "string"
                                },
                                "containerRuntimeVersion": {
                                    "type": "string"
                                },
                                "kernelVersion": {
                                    "type": "string"
                                },
                                "kubeProxyVersion": {
                                    "type": "string"
                                },
                                "kubeletVersion": {
                                    "type": "string"
                                },
                                "machineID": {
                                    "type": "string"
                                },
                                "operatingSystem": {
                                    "type": "string"
                                },
                                "osImage": {
                                    "type": "string"
                                },
                                "systemUUID": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "config.TracingConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "exportEnabled": {
                    "type": "boolean"
                },
                "jaegerEndpoint": {
                    "type": "string"
                },
                "maxTraces": {
                    "type": "integer"
                },
                "retentionHours": {
                    "type": "integer"
                },
                "samplingRate": {
                    "type": "number"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceVersion": {
                    "type": "string"
                }
            }
        },
        "handlers.FeatureFlagsResponse": {
            "type": "object",
            "properties": {
                "enableCloudShell": {
                    "type": "boolean"
                },
                "enableTracing": {
                    "type": "boolean"
                }
            }
        },
        "types.Condition": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "types.ConfigMapListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.CronJobListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "concurrencyPolicy": {
                            "type": "string"
                        },
                        "failedJobsHistoryLimit": {
                            "type": "integer"
                        },
                        "schedule": {
                            "type": "string"
                        },
                        "successfulJobsHistoryLimit": {
                            "type": "integer"
                        },
                        "suspend": {
                            "type": "boolean"
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "active": {
                            "type": "integer"
                        },
                        "lastScheduleTime": {
                            "type": "string"
                        },
                        "lastSuccessfulTime": {
                            "type": "string"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.DaemonSetListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "currentNumberScheduled": {
                            "type": "integer"
                        },
                        "desiredNumberScheduled": {
                            "type": "integer"
                        },
                        "numberAvailable": {
                            "type": "integer"
                        },
                        "numberMisscheduled": {
                            "type": "integer"
                        },
                        "numberReady": {
                            "type": "integer"
                        },
                        "observedGeneration": {
                            "type": "integer"
                        },
                        "updatedNumberScheduled": {
                            "type": "integer"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.DeploymentListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "replicas": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "replicas": {
                            "type": "integer"
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "availableReplicas": {
                            "type": "integer"
                        },
                        "conditions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Condition"
                            }
                        },
                        "observedGeneration": {
                            "type": "integer"
                        },
                        "readyReplicas": {
                            "type": "integer"
                        },
                        "replicas": {
                            "type": "integer"
                        },
                        "updatedReplicas": {
                            "type": "integer"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.HPAListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "maxPods": {
                            "type": "integer"
                        },
                        "minPods": {
                            "type": "integer"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.HelmReleaseResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "chart": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "types.IngressListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "rules": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.JobListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "backoffLimit": {
                            "type": "integer"
                        },
                        "completionMode": {
                            "type": "string"
                        },
                        "completions": {
                            "type": "integer"
                        },
                        "suspend": {
                            "type": "boolean"
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "active": {
                            "type": "integer"
                        },
                        "conditions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Condition"
                            }
                        },
                        "failed": {
                            "type": "integer"
                        },
                        "ready": {
                            "type": "integer"
                        },
                        "startTime": {
                            "type": "string"
                        },
                        "succeeded": {
                            "type": "integer"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.PersistentVolumeClaimListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "accessModes": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                },
                                "requests": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "storageClassName": {
                            "type": "string"
                        },
                        "volumeMode": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "phase": {
                            "type": "string"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.PersistentVolumeListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "accessModes": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "capacity": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "storageClassName": {
                            "type": "string"
                        },
                        "volumeMode": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "phase": {
                            "type": "string"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.PodDisruptionBudgetListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "maxUnavailable": {
                            "type": "string"
                        },
                        "minAvailable": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "currentHealthy": {
                            "type": "integer"
                        },
                        "desiredHealthy": {
                            "type": "integer"
                        },
                        "disruptionsAllowed": {
                            "type": "integer"
                        },
                        "expectedPods": {
                            "type": "integer"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.PodListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "configName": {
                    "type": "string"
                },
                "cpu": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "lastRestartAt": {
                    "type": "string"
                },
                "lastRestartReason": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "node": {
                    "type": "string"
                },
                "podIP": {
                    "type": "string"
                },
                "qos": {
                    "type": "string"
                },
                "ready": {
                    "type": "string"
                },
                "restarts": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.ReplicaSetListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "availableReplicas": {
                            "type": "integer"
                        },
                        "fullyLabeledReplicas": {
                            "type": "integer"
                        },
                        "observedGeneration": {
                            "type": "integer"
                        },
                        "readyReplicas": {
                            "type": "integer"
                        },
                        "replicas": {
                            "type": "integer"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.SecretListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.ServiceAccountListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "secrets": {
                            "type": "integer"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.ServiceListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "type": "object",
                    "properties": {
                        "clusterIP": {
                            "type": "string"
                        },
                        "externalIPs": {
                            "type": "string"
                        },
                        "internalTrafficPolicy": {
                            "type": "string"
                        },
                        "ipFamilyPolicy": {
                            "type": "string"
                        },
                        "ports": {
                            "type": "string"
                        },
                        "sessionAffinity": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "types.StatefulSetListResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "hasUpdated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "availableReplicas": {
                            "type": "integer"
                        },
                        "fullyLabeledReplicas": {
                            "type": "integer"
                        },
                        "observedGeneration": {
                            "type": "integer"
                        },
                        "readyReplicas": {
                            "type": "integer"
                        },
                        "replicas": {
                            "type": "integer"
                        }
                    }
                },
                "uid": {
                    "type": "string"
                }
            }
        }
    }
}