definitions:
  cluster.NodeActionRequest:
    properties:
      deleteEmptyDirData:
        type: boolean
      force:
        type: boolean
      gracePeriod:
        type: integer
      ignoreDaemonSets:
        type: boolean
    type: object
  cluster.NodeListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      resourceVersion:
        type: string
      roles:
        items:
          type: string
        type: array
      spec:
        properties:
          podCIDR:
            type: string
          podCIDRs:
            items:
              type: string
            type: array
          providerID:
            type: string
        type: object
      status:
        properties:
          addresses:
            properties:
              internalIP:
                type: string
            type: object
          conditionStatus:
            type: string
          nodeInfo:
            properties:
              architecture:
                type: string
              bootID:
                type: string
              containerRuntimeVersion:
                type: string
              kernelVersion:
                type: string
              kubeProxyVersion:
                type: string
              kubeletVersion:
                type: string
              machineID:
                type: string
              operatingSystem:
                type: string
              osImage:
                type: string
              systemUUID:
                type: string
            type: object
        type: object
      uid:
        type: string
    type: object
  config.TracingConfig:
    properties:
      enabled:
        type: boolean
      exportEnabled:
        type: boolean
      jaegerEndpoint:
        type: string
      maxTraces:
        type: integer
      retentionHours:
        type: integer
      samplingRate:
        type: number
      serviceName:
        type: string
      serviceVersion:
        type: string
    type: object
  handlers.FeatureFlagsResponse:
    properties:
      enableCloudShell:
        type: boolean
      enableTracing:
        type: boolean
    type: object
  types.Condition:
    properties:
      status:
        type: string
      type:
        type: string
    type: object
  types.ConfigMapListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      keys:
        items:
          type: string
        type: array
      name:
        type: string
      namespace:
        type: string
      uid:
        type: string
    type: object
  types.CronJobListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      spec:
        properties:
          concurrencyPolicy:
            type: string
          failedJobsHistoryLimit:
            type: integer
          schedule:
            type: string
          successfulJobsHistoryLimit:
            type: integer
          suspend:
            type: boolean
        type: object
      status:
        properties:
          active:
            type: integer
          lastScheduleTime:
            type: string
          lastSuccessfulTime:
            type: string
        type: object
      uid:
        type: string
    type: object
  types.DaemonSetListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      status:
        properties:
          currentNumberScheduled:
            type: integer
          desiredNumberScheduled:
            type: integer
          numberAvailable:
            type: integer
          numberMisscheduled:
            type: integer
          numberReady:
            type: integer
          observedGeneration:
            type: integer
          updatedNumberScheduled:
            type: integer
        type: object
      uid:
        type: string
    type: object
  types.DeploymentListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      replicas:
        type: string
      spec:
        properties:
          replicas:
            type: integer
        type: object
      status:
        properties:
          availableReplicas:
            type: integer
          conditions:
            items:
              $ref: '#/definitions/types.Condition'
            type: array
          observedGeneration:
            type: integer
          readyReplicas:
            type: integer
          replicas:
            type: integer
          updatedReplicas:
            type: integer
        type: object
      uid:
        type: string
    type: object
  types.HPAListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      spec:
        properties:
          maxPods:
            type: integer
          minPods:
            type: integer
        type: object
      uid:
        type: string
    type: object
  types.HelmReleaseResponse:
    properties:
      age:
        type: string
      chart:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      revision:
        type: integer
      status:
        type: string
      uid:
        type: string
      updated:
        type: string
      version:
        type: string
    type: object
  types.IngressListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      spec:
        properties:
          rules:
            items:
              type: string
            type: array
        type: object
      uid:
        type: string
    type: object
  types.JobListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      spec:
        properties:
          backoffLimit:
            type: integer
          completionMode:
            type: string
          completions:
            type: integer
          suspend:
            type: boolean
        type: object
      status:
        properties:
          active:
            type: integer
          conditions:
            items:
              $ref: '#/definitions/types.Condition'
            type: array
          failed:
            type: integer
          ready:
            type: integer
          startTime:
            type: string
          succeeded:
            type: integer
        type: object
      uid:
        type: string
    type: object
  types.PersistentVolumeClaimListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      spec:
        properties:
          accessModes:
            items:
              type: string
            type: array
          resources:
            properties:
              limits:
                additionalProperties:
                  type: string
                type: object
              requests:
                additionalProperties:
                  type: string
                type: object
            type: object
          storageClassName:
            type: string
          volumeMode:
            type: string
        type: object
      status:
        properties:
          phase:
            type: string
        type: object
      uid:
        type: string
    type: object
  types.PersistentVolumeListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      spec:
        properties:
          accessModes:
            items:
              type: string
            type: array
          capacity:
            additionalProperties:
              type: string
            type: object
          storageClassName:
            type: string
          volumeMode:
            type: string
        type: object
      status:
        properties:
          phase:
            type: string
        type: object
      uid:
        type: string
    type: object
  types.PodDisruptionBudgetListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      spec:
        properties:
          maxUnavailable:
            type: string
          minAvailable:
            type: string
        type: object
      status:
        properties:
          currentHealthy:
            type: integer
          desiredHealthy:
            type: integer
          disruptionsAllowed:
            type: integer
          expectedPods:
            type: integer
        type: object
      uid:
        type: string
    type: object
  types.PodListResponse:
    properties:
      age:
        type: string
      clusterName:
        type: string
      configName:
        type: string
      cpu:
        type: string
      hasUpdated:
        type: boolean
      lastRestartAt:
        type: string
      lastRestartReason:
        type: string
      memory:
        type: string
      name:
        type: string
      namespace:
        type: string
      node:
        type: string
      podIP:
        type: string
      qos:
        type: string
      ready:
        type: string
      restarts:
        type: string
      status:
        type: string
      uid:
        type: string
    type: object
  types.ReplicaSetListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      status:
        properties:
          availableReplicas:
            type: integer
          fullyLabeledReplicas:
            type: integer
          observedGeneration:
            type: integer
          readyReplicas:
            type: integer
          replicas:
            type: integer
        type: object
      uid:
        type: string
    type: object
  types.SecretListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      keys:
        items:
          type: string
        type: array
      name:
        type: string
      namespace:
        type: string
      type:
        type: string
      uid:
        type: string
    type: object
  types.ServiceAccountListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      spec:
        properties:
          secrets:
            type: integer
        type: object
      uid:
        type: string
    type: object
  types.ServiceListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      spec:
        properties:
          clusterIP:
            type: string
          externalIPs:
            type: string
          internalTrafficPolicy:
            type: string
          ipFamilyPolicy:
            type: string
          ports:
            type: string
          sessionAffinity:
            type: string
          type:
            type: string
        type: object
      uid:
        type: string
    type: object
  types.StatefulSetListResponse:
    properties:
      age:
        type: string
      hasUpdated:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      status:
        properties:
          availableReplicas:
            type: integer
          fullyLabeledReplicas:
            type: integer
          observedGeneration:
            type: integer
          readyReplicas:
            type: integer
          replicas:
            type: integer
        type: object
      uid:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/:
    get:
      consumes:
      - application/json
      description: Get general information about the KubeDash API
      produces:
      - application/json
      responses:
        "200":
          description: API information
          schema:
            additionalProperties: true
            type: object
      summary: API Information
      tags:
      - System
  /api/v1/app/config:
    get:
      consumes:
      - application/json
      description: Retrieve all stored kubeconfig configurations with cluster information
      produces:
      - application/json
      responses:
        "200":
          description: List of kubeconfig configurations
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all kubeconfigs
      tags:
      - Configuration
  /api/v1/app/config/bearer:
    post:
      consumes:
      - multipart/form-data
      description: Create and store a kubeconfig using bearer token authentication
      parameters:
      - description: Configuration name
        in: formData
        name: name
        required: true
        type: string
      - description: Kubernetes API server URL
        in: formData
        name: serverIP
        required: true
        type: string
      - description: Bearer token for authentication
        in: formData
        name: token
        required: true
        type: string
      - description: Cluster name (defaults to name if not provided)
        in: formData
        name: cluster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Bearer kubeconfig created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create kubeconfig with bearer token
      tags:
      - Configuration
  /api/v1/app/config/certificate:
    post:
      consumes:
      - multipart/form-data
      description: Create and store a kubeconfig using client certificate authentication
      parameters:
      - description: Configuration name
        in: formData
        name: name
        required: true
        type: string
      - description: Kubernetes API server URL
        in: formData
        name: serverIP
        required: true
        type: string
      - description: Client certificate data (PEM format)
        in: formData
        name: clientCertData
        required: true
        type: string
      - description: Client private key data (PEM format)
        in: formData
        name: clientKeyData
        required: true
        type: string
      - description: Cluster name (defaults to name if not provided)
        in: formData
        name: cluster
        type: string
      - description: Certificate Authority data (PEM format)
        in: formData
        name: ca
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Certificate kubeconfig created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create kubeconfig with client certificates
      tags:
      - Configuration
  /api/v1/app/config/kubeconfigs:
    post:
      consumes:
      - multipart/form-data
      description: Upload and store a kubeconfig file for cluster access. Supports
        both file upload and text content.
      parameters:
      - description: Kubeconfig file to upload
        in: formData
        name: kubeconfig
        type: file
      - description: Kubeconfig content as text
        in: formData
        name: file
        type: string
      - description: Filename for the kubeconfig
        in: formData
        name: filename
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Kubeconfig uploaded successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - invalid file or format
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Upload kubeconfig file
      tags:
      - Configuration
  /api/v1/app/config/kubeconfigs/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a stored kubeconfig configuration by ID
      parameters:
      - description: Kubeconfig ID to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Kubeconfig deleted successfully
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Kubeconfig not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete kubeconfig
      tags:
      - Configuration
  /api/v1/app/config/validate:
    post:
      consumes:
      - multipart/form-data
      description: Validate a kubeconfig file format and test connectivity to all
        clusters. Supports both file upload and text content.
      parameters:
      - description: Kubeconfig file to validate
        in: formData
        name: kubeconfig
        type: file
      - description: Kubeconfig content as text
        in: formData
        name: file
        type: string
      - description: Filename for the kubeconfig
        in: formData
        name: filename
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Validation results with cluster connectivity status
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - invalid file or format
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Validate kubeconfig file
      tags:
      - Configuration
  /api/v1/app/config/validate-all:
    get:
      consumes:
      - application/json
      description: Validate connectivity for all stored kubeconfig configurations
        and return their current status
      produces:
      - application/json
      responses:
        "200":
          description: Validation results for all kubeconfigs with connectivity status
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Validate all stored kubeconfigs
      tags:
      - Configuration
  /api/v1/app/config/validate-bearer:
    post:
      consumes:
      - multipart/form-data
      description: Validate bearer token credentials and test connectivity to the
        Kubernetes cluster
      parameters:
      - description: Configuration name
        in: formData
        name: name
        required: true
        type: string
      - description: Kubernetes API server URL
        in: formData
        name: serverIP
        required: true
        type: string
      - description: Bearer token for authentication
        in: formData
        name: token
        required: true
        type: string
      - description: Cluster name (defaults to name if not provided)
        in: formData
        name: cluster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Validation results with connectivity status
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Validate bearer token configuration
      tags:
      - Configuration
  /api/v1/app/config/validate-certificate:
    post:
      consumes:
      - multipart/form-data
      description: Validate client certificate credentials and test connectivity to
        the Kubernetes cluster
      parameters:
      - description: Configuration name
        in: formData
        name: name
        required: true
        type: string
      - description: Kubernetes API server URL
        in: formData
        name: serverIP
        required: true
        type: string
      - description: Client certificate data (PEM format)
        in: formData
        name: clientCertData
        required: true
        type: string
      - description: Client private key data (PEM format)
        in: formData
        name: clientKeyData
        required: true
        type: string
      - description: Cluster name (defaults to name if not provided)
        in: formData
        name: cluster
        type: string
      - description: Certificate Authority data (PEM format)
        in: formData
        name: ca
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Validation results with connectivity status
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing required fields
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Validate certificate configuration
      tags:
      - Configuration
  /api/v1/cloudshell:
    get:
      consumes:
      - application/json
      description: List all active cloud shell sessions for a specific configuration
        and cluster
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: 'Namespace (default: default)'
        in: query
        name: namespace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of cloud shell sessions with limits
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: List Cloud Shell Sessions
      tags:
      - Cloud Shell
    post:
      consumes:
      - application/json
      description: Create a new cloud shell session with kubectl and helm access
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: 'Namespace (default: default)'
        in: query
        name: namespace
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Cloud shell session created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Too many requests - session limit reached
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Create Cloud Shell Session
      tags:
      - Cloud Shell
  /api/v1/cloudshell/{name}:
    delete:
      consumes:
      - application/json
      description: Delete a specific cloud shell session by name
      parameters:
      - description: Cloud shell session name
        in: path
        name: name
        required: true
        type: string
      - description: 'Namespace (default: default)'
        in: query
        name: namespace
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Delete Cloud Shell Session
      tags:
      - Cloud Shell
  /api/v1/cloudshell/cleanup:
    post:
      consumes:
      - application/json
      description: Manually trigger cleanup of old cloud shell sessions and orphaned
        resources
      produces:
      - application/json
      responses:
        "200":
          description: Cleanup initiated successfully
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Manual Cloud Shell Cleanup
      tags:
      - Cloud Shell
  /api/v1/cloudshell/ws:
    get:
      consumes:
      - application/json
      description: Connect to an interactive cloud shell terminal via WebSocket
      parameters:
      - description: Cloud shell pod name
        in: query
        name: pod
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        required: true
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: WebSocket connection established
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Pod not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Connect to Cloud Shell via WebSocket
      tags:
      - WebSocket
  /api/v1/configmaps:
    get:
      consumes:
      - application/json
      description: Retrieves all ConfigMaps in the specified namespace with transformed
        response format
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transformed ConfigMaps
          schema:
            items:
              $ref: '#/definitions/types.ConfigMapListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get all ConfigMaps in a namespace
      tags:
      - ConfigMaps
  /api/v1/configmaps/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific ConfigMap by name with namespace from query
        parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: ConfigMap name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: ConfigMap details
          schema:
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ConfigMap not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific ConfigMap by name
      tags:
      - ConfigMaps
  /api/v1/configmaps/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific ConfigMap by name with namespace
        from query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: ConfigMap name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: List of events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ConfigMap events by name
      tags:
      - ConfigMaps
  /api/v1/configmaps/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific ConfigMap by name
        with namespace from query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: ConfigMap name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: ConfigMap YAML
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ConfigMap not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ConfigMap YAML by name
      tags:
      - ConfigMaps
  /api/v1/configmaps/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific ConfigMap by name and namespace
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: ConfigMap name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: ConfigMap details
          schema:
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ConfigMap not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific ConfigMap
      tags:
      - ConfigMaps
  /api/v1/configmaps/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific ConfigMap
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: ConfigMap name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: List of events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ConfigMap events
      tags:
      - ConfigMaps
  /api/v1/configmaps/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific ConfigMap
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: ConfigMap name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: ConfigMap YAML
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ConfigMap not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ConfigMap YAML
      tags:
      - ConfigMaps
  /api/v1/configmaps/sse:
    get:
      consumes:
      - application/json
      description: Retrieves ConfigMaps in the specified namespace with Server-Sent
        Events for real-time updates
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Stream of transformed ConfigMaps or JSON array
          schema:
            items:
              $ref: '#/definitions/types.ConfigMapListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ConfigMaps with real-time updates
      tags:
      - ConfigMaps
  /api/v1/cronjob/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific CronJob by name
        with namespace as query parameter
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: CronJob name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: CronJob details
          schema:
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CronJob not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get CronJob by name
      tags:
      - Workloads
  /api/v1/cronjob/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific CronJob by name
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: CronJob name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: CronJob events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CronJob not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get CronJob events by name
      tags:
      - Workloads
  /api/v1/cronjob/{name}/jobs:
    get:
      consumes:
      - application/json
      description: Retrieves all jobs created by a specific CronJob by name
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: CronJob name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: CronJob jobs
          schema:
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CronJob not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get CronJob jobs by name
      tags:
      - Workloads
  /api/v1/cronjob/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific CronJob by name
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: CronJob name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: CronJob YAML representation
          schema:
            type: string
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CronJob not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get CronJob YAML by name
      tags:
      - Workloads
  /api/v1/cronjobs:
    get:
      consumes:
      - text/event-stream
      description: Streams CronJobs data in real-time using Server-Sent Events. Supports
        namespace filtering and multi-cluster configurations.
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace to filter resources
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Streaming CronJobs data
          schema:
            items:
              $ref: '#/definitions/types.CronJobListResponse'
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get CronJobs (SSE)
      tags:
      - Workloads
  /api/v1/cronjobs/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific CronJob in a given
        namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: CronJob name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: CronJob details
          schema:
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CronJob not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get CronJob by namespace and name
      tags:
      - Workloads
  /api/v1/cronjobs/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific CronJob in a given namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: CronJob name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: CronJob events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CronJob not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get CronJob events by namespace and name
      tags:
      - Workloads
  /api/v1/cronjobs/{namespace}/{name}/suspend:
    post:
      consumes:
      - application/json
      description: Toggles the suspend state of a CronJob to pause or resume its execution
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: CronJob name
        in: path
        name: name
        required: true
        type: string
      - description: Suspend request body
        in: body
        name: suspend
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Suspend operation success response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CronJob not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Suspend or resume CronJob
      tags:
      - Workloads
  /api/v1/cronjobs/{namespace}/{name}/trigger:
    post:
      consumes:
      - application/json
      description: Manually triggers a CronJob by creating a new job from its template
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: CronJob name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Trigger success response with created job details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CronJob not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Trigger CronJob manually
      tags:
      - Workloads
  /api/v1/cronjobs/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific CronJob in a given
        namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: CronJob name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: CronJob YAML representation
          schema:
            type: string
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CronJob not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get CronJob YAML by namespace and name
      tags:
      - Workloads
  /api/v1/customresourcedefinitions:
    get:
      consumes:
      - application/json
      description: Get all Custom Resource Definitions (CRDs) in the cluster
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Custom Resource Definitions
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resource Definitions
      tags:
      - Custom Resources
  /api/v1/customresourcedefinitions/{name}:
    get:
      consumes:
      - application/json
      description: Get a specific Custom Resource Definition by its name
      parameters:
      - description: CRD name
        in: path
        name: name
        required: true
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Custom Resource Definition details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: CRD not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resource Definition by Name
      tags:
      - Custom Resources
  /api/v1/customresourcedefinitions/sse:
    get:
      consumes:
      - application/json
      description: Get all Custom Resource Definitions with real-time updates via
        Server-Sent Events
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of Custom Resource Definitions data
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resource Definitions (SSE)
      tags:
      - Custom Resources
  /api/v1/customresources:
    get:
      consumes:
      - application/json
      description: Get all custom resources for a specific Custom Resource Definition
      parameters:
      - description: Resource group
        in: query
        name: group
        required: true
        type: string
      - description: Resource version
        in: query
        name: version
        required: true
        type: string
      - description: Resource name
        in: query
        name: resource
        required: true
        type: string
      - description: Namespace (if empty, returns cluster-wide resources)
        in: query
        name: namespace
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of custom resources
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad request - missing required parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resources
      tags:
      - Custom Resources
  /api/v1/customresources/{name}/events:
    get:
      consumes:
      - application/json
      description: Get events for a specific custom resource (cluster-scoped or with
        optional namespace)
      parameters:
      - description: Resource name
        in: path
        name: name
        required: true
        type: string
      - description: Resource group
        in: query
        name: group
        required: true
        type: string
      - description: Resource version
        in: query
        name: version
        required: true
        type: string
      - description: Resource type
        in: query
        name: resource
        required: true
        type: string
      - description: Namespace (optional for namespaced resources)
        in: query
        name: namespace
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of events for the custom resource
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad request - missing required parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Custom resource not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resource Events by Name
      tags:
      - Custom Resources
  /api/v1/customresources/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Get the YAML representation of a specific custom resource (cluster-scoped
        or with optional namespace)
      parameters:
      - description: Resource name
        in: path
        name: name
        required: true
        type: string
      - description: Resource group
        in: query
        name: group
        required: true
        type: string
      - description: Resource version
        in: query
        name: version
        required: true
        type: string
      - description: Resource type
        in: query
        name: resource
        required: true
        type: string
      - description: Namespace (optional for namespaced resources)
        in: query
        name: namespace
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Custom resource YAML
          schema:
            type: string
        "400":
          description: Bad request - missing required parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Custom resource not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resource YAML by Name
      tags:
      - Custom Resources
  /api/v1/customresources/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Get a specific custom resource by name and namespace
      parameters:
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Resource name
        in: path
        name: name
        required: true
        type: string
      - description: Resource group
        in: query
        name: group
        required: true
        type: string
      - description: Resource version
        in: query
        name: version
        required: true
        type: string
      - description: Resource type
        in: query
        name: resource
        required: true
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Custom resource details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing required parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Custom resource not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resource by Name
      tags:
      - Custom Resources
  /api/v1/customresources/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Get events for a specific custom resource in a namespace
      parameters:
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Resource name
        in: path
        name: name
        required: true
        type: string
      - description: Resource group
        in: query
        name: group
        required: true
        type: string
      - description: Resource version
        in: query
        name: version
        required: true
        type: string
      - description: Resource type
        in: query
        name: resource
        required: true
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of events for the custom resource
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad request - missing required parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Custom resource not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resource Events
      tags:
      - Custom Resources
  /api/v1/customresources/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Get the YAML representation of a specific custom resource
      parameters:
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Resource name
        in: path
        name: name
        required: true
        type: string
      - description: Resource group
        in: query
        name: group
        required: true
        type: string
      - description: Resource version
        in: query
        name: version
        required: true
        type: string
      - description: Resource type
        in: query
        name: resource
        required: true
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Custom resource YAML
          schema:
            type: string
        "400":
          description: Bad request - missing required parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Custom resource not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resource YAML
      tags:
      - Custom Resources
  /api/v1/customresources/sse:
    get:
      consumes:
      - application/json
      description: Get custom resources for a specific CRD with real-time updates
        via Server-Sent Events
      parameters:
      - description: Resource group
        in: query
        name: group
        required: true
        type: string
      - description: Resource version
        in: query
        name: version
        required: true
        type: string
      - description: Resource name
        in: query
        name: resource
        required: true
        type: string
      - description: Namespace (if empty, returns cluster-wide resources)
        in: query
        name: namespace
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of custom resources data with additional printer columns
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing required parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Custom Resources (SSE)
      tags:
      - Custom Resources
  /api/v1/daemonset/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific daemonset by name with namespace as query parameter
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: DaemonSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: DaemonSet details
          schema:
            type: object
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: DaemonSet not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get DaemonSet by Name
      tags:
      - Workloads
  /api/v1/daemonset/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieve events for a specific daemonset by name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: DaemonSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: DaemonSet events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get DaemonSet Events by Name
      tags:
      - Workloads
  /api/v1/daemonset/{name}/pods:
    get:
      consumes:
      - application/json
      description: Retrieve all pods belonging to a specific daemonset by name with
        namespace as query parameter
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: DaemonSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: DaemonSet pods
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: DaemonSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get DaemonSet Pods by Name
      tags:
      - Workloads
  /api/v1/daemonset/{name}/restart:
    post:
      consumes:
      - application/json
      description: Restart all pods in a daemonset using rolling restart strategy
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: DaemonSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: DaemonSet restart initiated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Restart DaemonSet
      tags:
      - Workloads
  /api/v1/daemonset/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieve the YAML representation of a specific daemonset by name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: DaemonSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: DaemonSet YAML
          schema:
            type: string
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: DaemonSet not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get DaemonSet YAML by Name
      tags:
      - Workloads
  /api/v1/daemonsets:
    get:
      consumes:
      - application/json
      description: Retrieve all daemonsets with real-time updates via Server-Sent
        Events
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace to filter daemonsets (empty for all namespaces)
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of daemonset data
          schema:
            items:
              $ref: '#/definitions/types.DaemonSetListResponse'
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get DaemonSets (SSE)
      tags:
      - Workloads
  /api/v1/daemonsets/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific daemonset by namespace and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: DaemonSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: DaemonSet details
          schema:
            type: object
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: DaemonSet not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get DaemonSet by Namespace and Name
      tags:
      - Workloads
  /api/v1/daemonsets/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieve events for a specific daemonset by namespace and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: DaemonSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: DaemonSet events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get DaemonSet Events by Namespace and Name
      tags:
      - Workloads
  /api/v1/daemonsets/{namespace}/{name}/pods:
    get:
      consumes:
      - application/json
      description: Retrieve all pods belonging to a specific daemonset by namespace
        and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: DaemonSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: DaemonSet pods
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: DaemonSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get DaemonSet Pods by Namespace and Name
      tags:
      - Workloads
  /api/v1/daemonsets/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieve the YAML representation of a specific daemonset by namespace
        and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: DaemonSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: DaemonSet YAML
          schema:
            type: string
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: DaemonSet not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get DaemonSet YAML by Namespace and Name
      tags:
      - Workloads
  /api/v1/deployment/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific deployment by name with namespace as query
        parameter
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Deployment details
          schema:
            type: object
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Deployment not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployment by Name
      tags:
      - Workloads
  /api/v1/deployment/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieve events for a specific deployment by name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Deployment events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Deployment not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployment Events by Name
      tags:
      - Workloads
  /api/v1/deployment/{name}/pods:
    get:
      consumes:
      - application/json
      description: Retrieve all pods belonging to a specific deployment by name with
        namespace as query parameter
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Deployment pods
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Deployment not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployment Pods by Name
      tags:
      - Workloads
  /api/v1/deployment/{name}/restart:
    post:
      consumes:
      - application/json
      description: Restart all pods in a deployment using rolling or recreate strategy
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: 'Restart request body (restartType: ''rolling'' or ''recreate'',
          defaults to ''rolling'')'
        in: body
        name: body
        schema:
          properties:
            restartType:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Deployment restart initiated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - invalid parameters or restart type
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Restart Deployment
      tags:
      - Workloads
  /api/v1/deployment/{name}/scale:
    post:
      consumes:
      - application/json
      description: Update the number of replicas for a specific deployment
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Scale request body
        in: body
        name: body
        required: true
        schema:
          properties:
            replicas:
              format: int32
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Deployment scaled successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - invalid parameters or request body
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Scale Deployment
      tags:
      - Workloads
  /api/v1/deployment/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieve the YAML representation of a specific deployment by name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Deployment YAML
          schema:
            type: string
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Deployment not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployment YAML by Name
      tags:
      - Workloads
  /api/v1/deployments:
    get:
      consumes:
      - application/json
      description: Retrieve all deployments with real-time updates via Server-Sent
        Events
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace to filter deployments (empty for all namespaces)
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of deployment data
          schema:
            items:
              $ref: '#/definitions/types.DeploymentListResponse'
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployments (SSE)
      tags:
      - Workloads
  /api/v1/deployments/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific deployment by namespace and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Deployment details
          schema:
            type: object
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Deployment not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployment by Namespace and Name
      tags:
      - Workloads
  /api/v1/deployments/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieve events for a specific deployment by namespace and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Deployment events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Deployment not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployment Events by Namespace and Name
      tags:
      - Workloads
  /api/v1/deployments/{namespace}/{name}/pods:
    get:
      consumes:
      - application/json
      description: Retrieve all pods belonging to a specific deployment by namespace
        and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Deployment pods
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Deployment not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployment Pods by Namespace and Name
      tags:
      - Workloads
  /api/v1/deployments/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieve the YAML representation of a specific deployment by namespace
        and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Deployment name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Deployment YAML
          schema:
            type: string
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Deployment not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployment YAML by Namespace and Name
      tags:
      - Workloads
  /api/v1/deployments/json:
    get:
      consumes:
      - application/json
      description: Retrieve all deployments in JSON format (non-streaming)
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace to filter deployments (empty for all namespaces)
        in: query
        name: namespace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of deployments
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Deployments (JSON)
      tags:
      - Workloads
  /api/v1/events:
    get:
      consumes:
      - text/event-stream
      description: Streams Events data in real-time using Server-Sent Events. Provides
        live updates of cluster events.
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace to filter events (empty for cluster-wide)
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Streaming Events data
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Events (SSE)
      tags:
      - Cluster
  /api/v1/feature-flags:
    get:
      consumes:
      - application/json
      description: Get the current feature flag configuration including tracing and
        cloud shell enablement
      produces:
      - application/json
      responses:
        "200":
          description: Feature flags configuration
          schema:
            $ref: '#/definitions/handlers.FeatureFlagsResponse'
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Feature Flags
      tags:
      - System
  /api/v1/helm/charts/search:
    get:
      consumes:
      - application/json
      description: Searches for Helm charts in Artifact Hub based on query parameters
      parameters:
      - description: Search query
        in: query
        name: q
        type: string
      - default: 20
        description: Maximum number of results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Repository filter
        in: query
        name: repository
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Search results
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Search Helm charts
      tags:
      - Helm
  /api/v1/helm/releases/{name}/details:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific Helm release including
        status, values, and metadata
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Release name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Helm release details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Release not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Helm release details
      tags:
      - Helm
  /api/v1/helm/releases/sse:
    get:
      consumes:
      - application/json
      description: Retrieves Helm releases in the specified namespace with Server-Sent
        Events for real-time updates
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name (empty for all namespaces)
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Stream of Helm releases or JSON array
          schema:
            items:
              $ref: '#/definitions/types.HelmReleaseResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Helm releases with real-time updates
      tags:
      - Helm
  /api/v1/hpas:
    get:
      consumes:
      - application/json
      description: Retrieves all HorizontalPodAutoscalers in the specified namespace
        with transformed response format
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transformed HPAs
          schema:
            items:
              $ref: '#/definitions/types.HPAListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get all HPAs in a namespace
      tags:
      - HPAs
  /api/v1/hpas/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific HorizontalPodAutoscaler by name with namespace
        from query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: HPA name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: HPA details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: HPA not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific HPA by name
      tags:
      - HPAs
  /api/v1/hpas/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific HorizontalPodAutoscaler
        by name with namespace from query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: HPA name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: List of events
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get HPA events by name
      tags:
      - HPAs
  /api/v1/hpas/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific HorizontalPodAutoscaler
        by name with namespace from query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: HPA name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: HPA YAML
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: HPA not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get HPA YAML by name
      tags:
      - HPAs
  /api/v1/hpas/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific HorizontalPodAutoscaler by name and namespace
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: HPA name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: HPA details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: HPA not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific HPA
      tags:
      - HPAs
  /api/v1/hpas/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific HorizontalPodAutoscaler
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: HPA name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: List of events
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get HPA events
      tags:
      - HPAs
  /api/v1/hpas/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific HorizontalPodAutoscaler
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: HPA name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: HPA YAML
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: HPA not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get HPA YAML
      tags:
      - HPAs
  /api/v1/hpas/sse:
    get:
      consumes:
      - application/json
      description: Retrieves HorizontalPodAutoscalers in the specified namespace with
        Server-Sent Events for real-time updates
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Stream of transformed HPAs or JSON array
          schema:
            items:
              $ref: '#/definitions/types.HPAListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get HPAs with real-time updates
      tags:
      - HPAs
  /api/v1/ingress/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific ingress by name with namespace as query parameter
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Ingress name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ingress details
          schema:
            type: object
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Ingress not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Ingress by Name
      tags:
      - Networking
  /api/v1/ingress/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieve events for a specific ingress by name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Ingress name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Ingress events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Ingress Events by Name
      tags:
      - Networking
  /api/v1/ingress/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieve the YAML representation of a specific ingress by name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Ingress name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Ingress YAML
          schema:
            type: string
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Ingress not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Ingress YAML by Name
      tags:
      - Networking
  /api/v1/ingresses:
    get:
      consumes:
      - application/json
      description: Retrieve all ingresses with real-time updates via Server-Sent Events
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace to filter ingresses (empty for all namespaces)
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of ingress data
          schema:
            items:
              $ref: '#/definitions/types.IngressListResponse'
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Ingresses (SSE)
      tags:
      - Networking
  /api/v1/ingresses/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific ingress by namespace and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Ingress name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Ingress details
          schema:
            type: object
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Ingress not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Ingress by Namespace and Name
      tags:
      - Networking
  /api/v1/ingresses/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieve events for a specific ingress by namespace and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Ingress name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Ingress events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Ingress Events by Namespace and Name
      tags:
      - Networking
  /api/v1/ingresses/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieve the YAML representation of a specific ingress by namespace
        and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Ingress name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Ingress YAML
          schema:
            type: string
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Ingress not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Ingress YAML by Namespace and Name
      tags:
      - Networking
  /api/v1/job/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific Job by name with
        namespace as query parameter
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: Job name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job details
          schema:
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Job not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Job by name
      tags:
      - Workloads
  /api/v1/job/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific Job by name
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: Job name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Job events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Job not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Job events by name
      tags:
      - Workloads
  /api/v1/job/{name}/pods:
    get:
      consumes:
      - application/json
      description: Retrieves all pods managed by a specific Job by name with namespace
        as query parameter
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: Job name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job pods
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Job not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Job pods by name
      tags:
      - Workloads
  /api/v1/job/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific Job by name
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: Job name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Job YAML representation
          schema:
            type: string
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Job not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Job YAML by name
      tags:
      - Workloads
  /api/v1/jobs:
    get:
      consumes:
      - text/event-stream
      description: Streams Jobs data in real-time using Server-Sent Events. Supports
        namespace filtering and multi-cluster configurations.
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace to filter resources
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Streaming Jobs data
          schema:
            items:
              $ref: '#/definitions/types.JobListResponse'
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Jobs (SSE)
      tags:
      - Workloads
  /api/v1/jobs/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific Job in a given
        namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Job name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Job details
          schema:
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Job not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Job by namespace and name
      tags:
      - Workloads
  /api/v1/jobs/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific Job in a given namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Job name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Job events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Job not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Job events by namespace and name
      tags:
      - Workloads
  /api/v1/jobs/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific Job in a given
        namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Job name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Job YAML representation
          schema:
            type: string
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Job not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Job YAML by namespace and name
      tags:
      - Workloads
  /api/v1/leases:
    get:
      consumes:
      - application/json
      description: Retrieves all leases in the specified namespace
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of leases
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get all leases in a namespace
      tags:
      - Leases
  /api/v1/leases/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific lease
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Lease name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: List of events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get lease events
      tags:
      - Leases
  /api/v1/leases/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific lease
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Lease name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Lease YAML
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Lease not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get lease YAML
      tags:
      - Leases
  /api/v1/leases/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific lease by name and namespace
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Lease name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Lease details
          schema:
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Lease not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific lease
      tags:
      - Leases
  /api/v1/leases/sse:
    get:
      consumes:
      - application/json
      description: Retrieves leases in the specified namespace with Server-Sent Events
        for real-time updates
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Stream of leases or JSON array
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get leases with real-time updates
      tags:
      - Leases
  /api/v1/metrics/pods/{namespace}/{name}/sse:
    get:
      consumes:
      - application/json
      description: Streams Prometheus-based pod metrics (CPU, memory, network) via
        Server-Sent Events
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod name
        in: path
        name: name
        required: true
        type: string
      - default: 15m
        description: Time range for metrics
        in: query
        name: range
        type: string
      - default: 15s
        description: Step interval for metrics
        in: query
        name: step
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Stream of pod metrics
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Prometheus not available
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get pod metrics with real-time updates
      tags:
      - Metrics
  /api/v1/metrics/prometheus/availability:
    get:
      consumes:
      - application/json
      description: Checks if Prometheus is installed and reachable in the cluster
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Prometheus availability status
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Check Prometheus availability
      tags:
      - Metrics
  /api/v1/namespaces:
    get:
      consumes:
      - text/event-stream
      description: Streams Namespaces data in real-time using Server-Sent Events.
        Provides live updates of namespace status.
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Streaming Namespaces data
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Namespaces (SSE)
      tags:
      - Cluster
  /api/v1/namespaces/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Namespace details
          schema:
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Namespace not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Namespace by name
      tags:
      - Cluster
  /api/v1/namespaces/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Namespace events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Namespace not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Namespace events
      tags:
      - Cluster
  /api/v1/namespaces/{name}/pods:
    get:
      consumes:
      - application/json
      - text/event-stream
      description: Retrieves all pods in a specific namespace with real-time updates
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Namespace pods
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Namespace not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Namespace pods
      tags:
      - Cluster
  /api/v1/namespaces/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Namespace YAML representation
          schema:
            type: string
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Namespace not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Namespace YAML
      tags:
      - Cluster
  /api/v1/nodes:
    get:
      consumes:
      - text/event-stream
      description: Streams Nodes data in real-time using Server-Sent Events. Provides
        live updates of cluster node status.
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Streaming Nodes data
          schema:
            items:
              $ref: '#/definitions/cluster.NodeListResponse'
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Nodes (SSE)
      tags:
      - Cluster
  /api/v1/nodes/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific node in the cluster
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Node name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Node details
          schema:
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Node not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Node by name
      tags:
      - Cluster
  /api/v1/nodes/{name}/cordon:
    post:
      consumes:
      - application/json
      description: Marks a node as unschedulable, preventing new pods from being scheduled
        on it
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Node name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cordon operation success
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Node not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Cordon Node
      tags:
      - Cluster
  /api/v1/nodes/{name}/drain:
    post:
      consumes:
      - application/json
      description: Evicts all pods from a node and marks it as unschedulable for maintenance
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Node name
        in: path
        name: name
        required: true
        type: string
      - description: Drain options
        in: body
        name: drainOptions
        required: true
        schema:
          $ref: '#/definitions/cluster.NodeActionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Drain operation success with eviction details
          schema:
            additionalProperties: true
            type: object
        "206":
          description: Partial success - some pods failed to evict
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Node not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Drain Node
      tags:
      - Cluster
  /api/v1/nodes/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific node
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Node name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Node events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Node not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Node events
      tags:
      - Cluster
  /api/v1/nodes/{name}/pods:
    get:
      consumes:
      - application/json
      - text/event-stream
      description: Retrieves all pods running on a specific node with real-time updates
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Node name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Node pods
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Node not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Node pods
      tags:
      - Cluster
  /api/v1/nodes/{name}/uncordon:
    post:
      consumes:
      - application/json
      description: Marks a node as schedulable, allowing new pods to be scheduled
        on it
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Node name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Uncordon operation success
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Node not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Uncordon Node
      tags:
      - Cluster
  /api/v1/nodes/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific node
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Node name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Node YAML representation
          schema:
            type: string
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Node not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Node YAML
      tags:
      - Cluster
  /api/v1/nodes/permissions:
    get:
      consumes:
      - application/json
      description: Checks if the current user has permission to perform specific actions
        on a node (cordon, uncordon, drain)
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Action to check permissions for
        enum:
        - cordon
        - uncordon
        - drain
        in: query
        name: action
        required: true
        type: string
      - description: Node name to check permissions for
        in: query
        name: nodeName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Permission check results
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Check Node action permissions
      tags:
      - Cluster
  /api/v1/persistentvolumeclaims:
    get:
      consumes:
      - application/json
      description: Get all persistent volume claims with real-time updates via Server-Sent
        Events
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace filter
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of PVC data
          schema:
            items:
              $ref: '#/definitions/types.PersistentVolumeClaimListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - KubeConfig: []
      summary: Get Persistent Volume Claims (SSE)
      tags:
      - Storage
  /api/v1/persistentvolumes:
    get:
      consumes:
      - application/json
      description: Get all persistent volumes with real-time updates via Server-Sent
        Events
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of PV data
          schema:
            items:
              $ref: '#/definitions/types.PersistentVolumeListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - KubeConfig: []
      summary: Get Persistent Volumes (SSE)
      tags:
      - Storage
  /api/v1/pod/{name}/exec/ws:
    get:
      consumes:
      - application/json
      description: Execute interactive commands in a pod container by name via WebSocket
        connection
      parameters:
      - description: Pod name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Container name (defaults to first container)
        in: query
        name: container
        type: string
      - description: 'Command to execute (default: /bin/sh)'
        in: query
        name: command
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: WebSocket connection established
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Pod not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Execute Commands in Pod by Name via WebSocket
      tags:
      - WebSocket
  /api/v1/pod/{name}/logs/ws:
    get:
      consumes:
      - application/json
      description: Stream real-time pod logs via WebSocket connection with support
        for multiple containers, previous logs, and filtering
      parameters:
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod name
        in: path
        name: name
        required: true
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Container name (defaults to first container)
        in: query
        name: container
        type: string
      - description: Stream logs from all containers
        in: query
        name: all-containers
        type: boolean
      - description: Include logs from previous pod instance
        in: query
        name: previous
        type: boolean
      - description: Get all logs (ignores tail-lines)
        in: query
        name: all-logs
        type: boolean
      - description: 'Number of lines to tail (default: 100)'
        in: query
        name: tail-lines
        type: integer
      - description: Start time for logs (RFC3339 format)
        in: query
        name: since-time
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: WebSocket connection established
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Pod not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Stream Pod Logs via WebSocket
      tags:
      - WebSocket
  /api/v1/poddisruptionbudgets:
    get:
      consumes:
      - application/json
      description: Retrieves all Pod Disruption Budgets in the specified namespace
        with transformed response format
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transformed Pod Disruption Budgets
          schema:
            items:
              $ref: '#/definitions/types.PodDisruptionBudgetListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get all Pod Disruption Budgets in a namespace
      tags:
      - PodDisruptionBudgets
  /api/v1/poddisruptionbudgets/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific Pod Disruption Budget by name and namespace
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod Disruption Budget name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Pod Disruption Budget details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Pod Disruption Budget not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific Pod Disruption Budget
      tags:
      - PodDisruptionBudgets
  /api/v1/poddisruptionbudgets/sse:
    get:
      consumes:
      - application/json
      description: Retrieves Pod Disruption Budgets in the specified namespace with
        Server-Sent Events for real-time updates
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Stream of transformed Pod Disruption Budgets or JSON array
          schema:
            items:
              $ref: '#/definitions/types.PodDisruptionBudgetListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Pod Disruption Budgets with real-time updates
      tags:
      - PodDisruptionBudgets
  /api/v1/pods:
    get:
      consumes:
      - application/json
      description: Get all pods with real-time updates via Server-Sent Events
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace filter
        in: query
        name: namespace
        type: string
      - description: Node name filter
        in: query
        name: node
        type: string
      - description: Owner type (deployment, daemonset, etc.)
        in: query
        name: owner
        type: string
      - description: Owner name
        in: query
        name: ownerName
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of pod data
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - KubeConfig: []
      summary: Get Pods (SSE)
      tags:
      - Workloads
  /api/v1/pods/{namespace}/{name}/exec/ws:
    get:
      consumes:
      - application/json
      description: Execute interactive commands in a pod container via WebSocket connection
      parameters:
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod name
        in: path
        name: name
        required: true
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Container name (defaults to first container)
        in: query
        name: container
        type: string
      - description: 'Command to execute (default: /bin/sh)'
        in: query
        name: command
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: WebSocket connection established
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Pod not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Execute Commands in Pod via WebSocket
      tags:
      - WebSocket
  /api/v1/portforward/sessions:
    get:
      consumes:
      - application/json
      description: Get a list of all currently active port forward sessions
      produces:
      - application/json
      responses:
        "200":
          description: List of active sessions with count
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get Active Port Forward Sessions
      tags:
      - Port Forward
  /api/v1/portforward/sessions/{id}:
    delete:
      consumes:
      - application/json
      description: Stop a specific port forward session by ID
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session stopped successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Session not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Stop Port Forward Session
      tags:
      - Port Forward
  /api/v1/portforward/ws:
    get:
      consumes:
      - application/json
      description: Create a port forward connection to a Kubernetes resource via WebSocket
      parameters:
      - description: Resource type (pod, service)
        in: query
        name: resourceType
        required: true
        type: string
      - description: Resource name
        in: query
        name: resourceName
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Remote port to forward to
        in: query
        name: remotePort
        required: true
        type: integer
      - description: Local port to bind (auto-assigned if not specified)
        in: query
        name: localPort
        type: integer
      - description: 'Protocol (default: TCP)'
        in: query
        name: protocol
        type: string
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: WebSocket connection established
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Resource not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Port Forward via WebSocket
      tags:
      - WebSocket
  /api/v1/replicaset/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific ReplicaSet by name
        with namespace as query parameter
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: ReplicaSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ReplicaSet details
          schema:
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ReplicaSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ReplicaSet by name
      tags:
      - Workloads
  /api/v1/replicaset/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific ReplicaSet by name
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: ReplicaSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: ReplicaSet events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ReplicaSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ReplicaSet events by name
      tags:
      - Workloads
  /api/v1/replicaset/{name}/pods:
    get:
      consumes:
      - application/json
      description: Retrieves all pods managed by a specific ReplicaSet by name with
        namespace as query parameter
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: ReplicaSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ReplicaSet pods
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ReplicaSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ReplicaSet pods by name
      tags:
      - Workloads
  /api/v1/replicaset/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific ReplicaSet by name
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: query
        name: namespace
        required: true
        type: string
      - description: ReplicaSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: ReplicaSet YAML representation
          schema:
            type: string
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ReplicaSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ReplicaSet YAML by name
      tags:
      - Workloads
  /api/v1/replicasets:
    get:
      consumes:
      - text/event-stream
      description: Streams ReplicaSets data in real-time using Server-Sent Events.
        Supports namespace filtering and multi-cluster configurations.
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace to filter resources
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Streaming ReplicaSets data
          schema:
            items:
              $ref: '#/definitions/types.ReplicaSetListResponse'
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ReplicaSets (SSE)
      tags:
      - Workloads
  /api/v1/replicasets/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific ReplicaSet in a
        given namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: ReplicaSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: ReplicaSet details
          schema:
            type: object
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ReplicaSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ReplicaSet by namespace and name
      tags:
      - Workloads
  /api/v1/replicasets/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific ReplicaSet in a given namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: ReplicaSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: ReplicaSet events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ReplicaSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ReplicaSet events by namespace and name
      tags:
      - Workloads
  /api/v1/replicasets/{namespace}/{name}/pods:
    get:
      consumes:
      - application/json
      description: Retrieves all pods managed by a specific ReplicaSet in a given
        namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: ReplicaSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ReplicaSet pods
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ReplicaSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ReplicaSet pods by namespace and name
      tags:
      - Workloads
  /api/v1/replicasets/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific ReplicaSet in a
        given namespace
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name for multi-cluster setups
        in: query
        name: cluster
        type: string
      - description: Kubernetes namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: ReplicaSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: ReplicaSet YAML representation
          schema:
            type: string
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: ReplicaSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get ReplicaSet YAML by namespace and name
      tags:
      - Workloads
  /api/v1/secrets:
    get:
      consumes:
      - application/json
      description: Retrieves all secrets in the specified namespace with transformed
        response format
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transformed secrets
          schema:
            items:
              $ref: '#/definitions/types.SecretListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get all secrets in a namespace
      tags:
      - Secrets
  /api/v1/secrets/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific secret by name with namespace from query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Secret name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Secret details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Secret not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific secret by name
      tags:
      - Secrets
  /api/v1/secrets/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific secret by name with namespace
        from query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Secret name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: List of events
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get secret events by name
      tags:
      - Secrets
  /api/v1/secrets/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific secret by name
        with namespace from query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Secret name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Secret YAML
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Secret not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get secret YAML by name
      tags:
      - Secrets
  /api/v1/secrets/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific secret by name and namespace
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Secret name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Secret details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Secret not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific secret
      tags:
      - Secrets
  /api/v1/secrets/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific secret
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Secret name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: List of events
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get secret events
      tags:
      - Secrets
  /api/v1/secrets/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific secret
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Secret name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Secret YAML
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Secret not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get secret YAML
      tags:
      - Secrets
  /api/v1/secrets/sse:
    get:
      consumes:
      - application/json
      description: Retrieves secrets in the specified namespace with Server-Sent Events
        for real-time updates
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Stream of transformed secrets or JSON array
          schema:
            items:
              $ref: '#/definitions/types.SecretListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get secrets with real-time updates
      tags:
      - Secrets
  /api/v1/serviceaccounts/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific Service Account by name with namespace from
        query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Service Account name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Service Account details
          schema:
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Service Account not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific Service Account by name
      tags:
      - ServiceAccounts
  /api/v1/serviceaccounts/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieves events related to a specific Service Account
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Service Account name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: List of events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Service Account events
      tags:
      - ServiceAccounts
  /api/v1/serviceaccounts/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific Service Account
        by name with namespace from query parameters
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Service Account name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Service Account YAML
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Service Account not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Service Account YAML by name
      tags:
      - ServiceAccounts
  /api/v1/serviceaccounts/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific Service Account by name and namespace
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Service Account name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Service Account details
          schema:
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Service Account not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get a specific Service Account
      tags:
      - ServiceAccounts
  /api/v1/serviceaccounts/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieves the YAML representation of a specific Service Account
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Service Account name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Service Account YAML
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Service Account not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Service Account YAML
      tags:
      - ServiceAccounts
  /api/v1/serviceaccounts/sse:
    get:
      consumes:
      - application/json
      description: Retrieves Service Accounts in the specified namespace with Server-Sent
        Events for real-time updates
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace name (empty for all namespaces)
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      - application/json
      responses:
        "200":
          description: Stream of transformed Service Accounts or JSON array
          schema:
            items:
              $ref: '#/definitions/types.ServiceAccountListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get Service Accounts with real-time updates
      tags:
      - ServiceAccounts
  /api/v1/services:
    get:
      consumes:
      - application/json
      description: Get all services with real-time updates via Server-Sent Events
      parameters:
      - description: Kubernetes configuration ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name
        in: query
        name: cluster
        type: string
      - description: Namespace filter
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of service data
          schema:
            items:
              $ref: '#/definitions/types.ServiceListResponse'
            type: array
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - KubeConfig: []
      summary: Get Services (SSE)
      tags:
      - Networking
  /api/v1/statefulset/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific statefulset by name with namespace as query
        parameter
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: StatefulSet details
          schema:
            type: object
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: StatefulSet not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get StatefulSet by Name
      tags:
      - Workloads
  /api/v1/statefulset/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieve events for a specific statefulset by name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: StatefulSet events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get StatefulSet Events by Name
      tags:
      - Workloads
  /api/v1/statefulset/{name}/pods:
    get:
      consumes:
      - application/json
      description: Retrieve all pods belonging to a specific statefulset by name with
        namespace as query parameter
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: StatefulSet pods
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: StatefulSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get StatefulSet Pods by Name
      tags:
      - Workloads
  /api/v1/statefulset/{name}/restart:
    post:
      consumes:
      - application/json
      description: Restart all pods in a statefulset using rolling or recreate strategy
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: 'Restart request body (restartType: ''rolling'' or ''recreate'',
          defaults to ''rolling'')'
        in: body
        name: body
        schema:
          properties:
            restartType:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: StatefulSet restart initiated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - invalid parameters or restart type
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Restart StatefulSet
      tags:
      - Workloads
  /api/v1/statefulset/{name}/scale:
    post:
      consumes:
      - application/json
      description: Update the number of replicas for a specific statefulset
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      - description: Scale request body
        in: body
        name: body
        required: true
        schema:
          properties:
            replicas:
              format: int32
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: StatefulSet scaled successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request - invalid parameters or request body
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Scale StatefulSet
      tags:
      - Workloads
  /api/v1/statefulset/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieve the YAML representation of a specific statefulset by name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: StatefulSet YAML
          schema:
            type: string
        "400":
          description: Bad request - missing namespace parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: StatefulSet not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get StatefulSet YAML by Name
      tags:
      - Workloads
  /api/v1/statefulsets:
    get:
      consumes:
      - application/json
      description: Retrieve all statefulsets with real-time updates via Server-Sent
        Events
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace to filter statefulsets (empty for all namespaces)
        in: query
        name: namespace
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of statefulset data
          schema:
            items:
              $ref: '#/definitions/types.StatefulSetListResponse'
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - insufficient permissions
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get StatefulSets (SSE)
      tags:
      - Workloads
  /api/v1/statefulsets/{namespace}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific statefulset by namespace and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: StatefulSet details
          schema:
            type: object
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: StatefulSet not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get StatefulSet by Namespace and Name
      tags:
      - Workloads
  /api/v1/statefulsets/{namespace}/{name}/events:
    get:
      consumes:
      - application/json
      description: Retrieve events for a specific statefulset by namespace and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: StatefulSet events
          schema:
            items:
              type: object
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get StatefulSet Events by Namespace and Name
      tags:
      - Workloads
  /api/v1/statefulsets/{namespace}/{name}/pods:
    get:
      consumes:
      - application/json
      description: Retrieve all pods belonging to a specific statefulset by namespace
        and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: StatefulSet pods
          schema:
            items:
              $ref: '#/definitions/types.PodListResponse'
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: StatefulSet not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get StatefulSet Pods by Namespace and Name
      tags:
      - Workloads
  /api/v1/statefulsets/{namespace}/{name}/yaml:
    get:
      consumes:
      - application/json
      description: Retrieve the YAML representation of a specific statefulset by namespace
        and name
      parameters:
      - description: Kubernetes config ID
        in: query
        name: config
        required: true
        type: string
      - description: Cluster name (for multi-cluster configs)
        in: query
        name: cluster
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: StatefulSet name
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: StatefulSet YAML
          schema:
            type: string
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: StatefulSet not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - KubeConfig: []
      summary: Get StatefulSet YAML by Namespace and Name
      tags:
      - Workloads
  /api/v1/traces:
    get:
      consumes:
      - application/json
      description: Get traces with filtering and pagination support
      parameters:
      - description: Filter by service name
        in: query
        name: service
        type: string
      - description: Filter by operation name
        in: query
        name: operation
        type: string
      - description: Filter by trace status
        in: query
        name: status
        type: string
      - description: Start time filter (RFC3339 format)
        in: query
        name: startTime
        type: string
      - description: End time filter (RFC3339 format)
        in: query
        name: endTime
        type: string
      - description: Minimum duration filter (e.g., '100ms', '1s')
        in: query
        name: minDuration
        type: string
      - description: Maximum duration filter (e.g., '5s', '1m')
        in: query
        name: maxDuration
        type: string
      - description: 'Maximum number of traces to return (default: 100)'
        in: query
        name: limit
        type: integer
      - description: 'Number of traces to skip (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Traces with pagination info
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Traces
      tags:
      - Tracing
  /api/v1/traces/{traceId}:
    get:
      consumes:
      - application/json
      description: Get a specific trace by its trace ID including all spans
      parameters:
      - description: Trace ID
        in: path
        name: traceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Trace details with spans
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing trace ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Trace not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Trace by ID
      tags:
      - Tracing
  /api/v1/traces/export:
    get:
      consumes:
      - application/json
      description: Export all traces as JSON file download
      produces:
      - application/json
      responses:
        "200":
          description: Traces export file
          schema:
            type: file
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Export Traces
      tags:
      - Tracing
  /api/v1/traces/service-map:
    get:
      consumes:
      - application/json
      description: Get service dependency map showing connections between services
      parameters:
      - description: 'Time range for service map (default: ''1h'')'
        in: query
        name: timeRange
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Service map with nodes and connections
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Service Map
      tags:
      - Tracing
  /api/v1/tracing/config:
    get:
      consumes:
      - application/json
      description: Get the current tracing configuration settings
      produces:
      - application/json
      responses:
        "200":
          description: Tracing configuration
          schema:
            $ref: '#/definitions/config.TracingConfig'
      security:
      - BearerAuth: []
      summary: Get Tracing Configuration
      tags:
      - Tracing
    put:
      consumes:
      - application/json
      description: Update the tracing configuration settings
      parameters:
      - description: Tracing configuration
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/config.TracingConfig'
      produces:
      - application/json
      responses:
        "200":
          description: Updated tracing configuration
          schema:
            $ref: '#/definitions/config.TracingConfig'
        "400":
          description: Bad request - invalid configuration
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update Tracing Configuration
      tags:
      - Tracing
  /api/v1/tracing/stats:
    get:
      consumes:
      - application/json
      description: Get statistics about stored traces including counts, averages,
        and error rates
      produces:
      - application/json
      responses:
        "200":
          description: Tracing statistics
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Tracing Statistics
      tags:
      - Tracing
  /health:
    get:
      consumes:
      - application/json
      description: Get the health status of the API
      produces:
      - application/json
      responses:
        "200":
          description: Health status
          schema:
            additionalProperties: true
            type: object
      summary: Health Check
      tags:
      - System
swagger: "2.0"
